import{A as I,aZ as L,a_ as p,a$ as j,b0 as S,b1 as q,b2 as $,b3 as te,R as N}from"./DLx3-ifv.js";const G=()=>{const s="/api";return{routes:{auth:{login:`${s}/auth/login`,register:`${s}/auth/register`,logout:`${s}/auth/logout`,refresh:`${s}/auth/refresh`,resetPassword:`${s}/auth/reset-password`,verifyEmail:`${s}/auth/verify-email`},users:{profile:`${s}/users/profile`,updateProfile:`${s}/users/profile`,avatar:`${s}/users/avatar`,preferences:`${s}/users/preferences`,byId:r=>`${s}/users/${r}`},caregivers:{list:`${s}/caregivers`,search:`${s}/caregivers/search`,filter:`${s}/caregivers/filter`,featured:`${s}/caregivers/featured`,topRated:`${s}/caregivers/top-rated`,byId:r=>`${s}/caregivers/${r}`,reviews:r=>`${s}/caregivers/${r}/reviews`,availability:r=>`${s}/caregivers/${r}/availability`,schedule:r=>`${s}/caregivers/${r}/schedule`},bookings:{create:`${s}/bookings`,list:`${s}/bookings`,userBookings:r=>`${s}/bookings/user/${r}`,caregiverBookings:r=>`${s}/bookings/caregiver/${r}`,byId:r=>`${s}/bookings/${r}`,cancel:r=>`${s}/bookings/${r}/cancel`,confirm:r=>`${s}/bookings/${r}/confirm`,complete:r=>`${s}/bookings/${r}/complete`,reschedule:r=>`${s}/bookings/${r}/reschedule`},payments:{process:`${s}/payments/process`,history:`${s}/payments/history`,byId:r=>`${s}/payments/${r}`,refund:r=>`${s}/payments/${r}/refund`,receipt:r=>`${s}/payments/${r}/receipt`},reviews:{create:`${s}/reviews`,byCaregiver:r=>`${s}/reviews/caregiver/${r}`,byUser:r=>`${s}/reviews/user/${r}`,byId:r=>`${s}/reviews/${r}`,update:r=>`${s}/reviews/${r}`,delete:r=>`${s}/reviews/${r}`},search:{caregivers:`${s}/search/caregivers`,suggestions:`${s}/search/suggestions`,popular:`${s}/search/popular-terms`,history:`${s}/search/history`},matching:{findMatches:`${s}/matching/find`,savePreferences:`${s}/matching/preferences`,getRecommendations:`${s}/matching/recommendations`},calculator:{estimate:`${s}/calculator/estimate`,breakdown:`${s}/calculator/breakdown`,modifiers:`${s}/calculator/modifiers`},dashboard:{stats:`${s}/dashboard/stats`,recentActivity:`${s}/dashboard/recent`,notifications:`${s}/dashboard/notifications`},notifications:{list:`${s}/notifications`,markRead:r=>`${s}/notifications/${r}/read`,markAllRead:`${s}/notifications/read-all`,preferences:`${s}/notifications/preferences`},uploads:{avatar:`${s}/uploads/avatar`,documents:`${s}/uploads/documents`,certificates:`${s}/uploads/certificates`},locations:{search:`${s}/locations/search`,nearby:`${s}/locations/nearby`,districts:`${s}/locations/districts`},system:{health:`${s}/system/health`,status:`${s}/system/status`,version:`${s}/system/version`}},methods:{GET:"GET",POST:"POST",PUT:"PUT",DELETE:"DELETE",PATCH:"PATCH"},createApiConfig:(r,v,b)=>{const w={method:r,headers:{"Content-Type":"application/json",...b?.headers}};return v&&["POST","PUT","PATCH"].includes(r)&&(w.body=JSON.stringify(v)),w},errorMessages:{400:"請求參數錯誤",401:"未授權，請重新登入",403:"權限不足",404:"資源不存在",409:"資源衝突",422:"資料驗證失敗",429:"請求過於頻繁",500:"伺服器內部錯誤",502:"服務暫時無法使用",503:"服務維護中"},isSuccessStatus:r=>r>=200&&r<300,isClientError:r=>r>=400&&r<500,isServerError:r=>r>=500,baseUrl:s}},ae=()=>{const{errorMessages:s,isSuccessStatus:n}=G(),i=I(!1),c=I(null),y=I(null),C=u=>{const t=new URLSearchParams;return Object.entries(u).forEach(([e,o])=>{o!=null&&(Array.isArray(o)?o.forEach(l=>t.append(e,l.toString())):t.append(e,o.toString()))}),t.toString()},h=u=>new Promise(t=>setTimeout(t,u)),k=async(u,t)=>{if(t.mockDelay&&await h(t.mockDelay),Math.random()<.05)throw new Error("Mock API error");return u},r=(u,t)=>{if(console.error(`API Error [${t}]:`,u),u.name==="AbortError")return{status:0,message:"請求已取消",code:"ABORTED"};if(u.name==="TypeError"&&u.message.includes("fetch"))return{status:0,message:"網路連線錯誤",code:"NETWORK_ERROR"};const e=u.status||500,o=s[e]||u.message||"未知錯誤";return{status:e,message:o,code:u.code,details:u.details}},v=async u=>{i.value=!0,c.value=null;try{y.value=new AbortController;let t=u.url;if(u.params){const d=C(u.params);t+=d?`?${d}`:""}const e={method:u.method,signal:y.value.signal,headers:{"Content-Type":"application/json",...u.headers}};u.data&&["POST","PUT","PATCH"].includes(u.method)&&(e.body=JSON.stringify(u.data));const o=u.timeout||1e4,l=setTimeout(()=>{y.value?.abort()},o);try{const d=await fetch(t,e);if(clearTimeout(l),!n(d.status)){const P=await d.json().catch(()=>({}));throw{status:d.status,message:P.message||s[d.status]||"API 請求失敗",code:P.code,details:P.details}}return await d.json()}catch(d){throw clearTimeout(l),d}}catch(t){throw c.value=r(t,u.url),c.value}finally{i.value=!1,y.value=null}},b=(u,t,e)=>v({method:"GET",url:u,params:t,...e}),w=(u,t,e)=>v({method:"POST",url:u,data:t,...e}),A=(u,t,e)=>v({method:"PUT",url:u,data:t,...e}),R=(u,t,e)=>v({method:"PATCH",url:u,data:t,...e}),T=(u,t)=>v({method:"DELETE",url:u,...t}),_=()=>{y.value?.abort()},U=()=>{c.value=null},D=async(u,t=3)=>{let e=null;for(let o=0;o<=t;o++)try{return await v(u)}catch(l){if(e=l,e.status>=400&&e.status<500||o===t)break;await h(Math.pow(2,o)*1e3)}throw e};return{isLoading:L(i),error:L(c),request:v,get:b,post:w,put:A,patch:R,delete:T,cancel:_,clearError:U,retry:D,mockResponse:k}},ne=()=>{const s=I(!1),n=I(null),i=(t=500)=>new Promise(e=>setTimeout(e,t)),c=()=>Math.random()<.05,y=async(t,e)=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("網路連線異常，請稍後再試");const o=$.find(l=>l.email===t);return o?e.length<6?{success:!1,error:"密碼錯誤"}:{success:!0,data:o,message:"登入成功"}:{success:!1,error:"用戶不存在"}}catch(o){return n.value=o.message,{success:!1,error:o.message}}finally{s.value=!1}},C=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("註冊服務暫時無法使用");if($.find(o=>o.email===t.email))return{success:!1,error:"此電子郵件已被註冊"};const e={...t,id:`user-${Date.now()}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return $.push(e),{success:!0,data:e,message:"註冊成功"}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},h=async(t,e)=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("更新失敗，請稍後再試");const o=$.findIndex(l=>l.id===t);return o===-1?{success:!1,error:"用戶不存在"}:($[o].profile={...$[o].profile,...e},$[o].updated_at=new Date().toISOString(),{success:!0,data:$[o],message:"個人資料更新成功"})}catch(o){return n.value=o.message,{success:!1,error:o.message}}finally{s.value=!1}},k=async(t=1,e=10)=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入看護師列表");const o=(t-1)*e,l=o+e;return{success:!0,data:{data:S.slice(o,l),total:S.length,page:t,limit:e,hasNext:l<S.length,hasPrev:t>1}}}catch(o){return n.value=o.message,{success:!1,error:o.message}}finally{s.value=!1}},r=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("搜尋服務暫時無法使用");const e=t.toLowerCase(),o=S.filter(l=>l.name.toLowerCase().includes(e)||l.skills.toLowerCase().includes(e)||l.experience.toLowerCase().includes(e)||l.location?.toLowerCase().includes(e)||l.licenses.some(d=>d.toLowerCase().includes(e)));return{success:!0,data:o,message:`找到 ${o.length} 位相關看護師`}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},v=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入看護師詳細資料");const e=S.find(o=>o.id===t);return e?{success:!0,data:e}:{success:!1,error:"看護師不存在"}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},b=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("篩選服務暫時無法使用");let e=[...S];return t.location&&(e=e.filter(o=>o.location?.includes(t.location))),t.minRating&&(e=e.filter(o=>o.rating>=t.minRating)),t.maxHourlyRate&&(e=e.filter(o=>o.hourly_rate<=t.maxHourlyRate)),t.maxShiftRate&&(e=e.filter(o=>o.shift_rate<=t.maxShiftRate)),t.skills&&t.skills.length>0&&(e=e.filter(o=>t.skills.some(l=>o.skills.toLowerCase().includes(l.toLowerCase())))),{success:!0,data:e,message:`找到 ${e.length} 位符合條件的看護師`}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},w=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("預約失敗，請稍後再試");const e={...t,id:`booking-${Date.now()}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return p.push(e),{success:!0,data:e,message:"預約成功"}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},A=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入預約記錄");return{success:!0,data:p.filter(o=>o.user_id===t)}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},R=async(t,e)=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("更新預約狀態失敗");const o=p.findIndex(l=>l.id===t);return o===-1?{success:!1,error:"預約不存在"}:(p[o].status=e,p[o].updated_at=new Date().toISOString(),{success:!0,data:p[o],message:"預約狀態更新成功"})}catch(o){return n.value=o.message,{success:!1,error:o.message}}finally{s.value=!1}},T=async t=>{s.value=!0,n.value=null;try{if(await i(1e3),c())throw new Error("支付處理失敗，請檢查支付資訊");if(t.method==="credit_card"&&(!t.cardDetails?.number||t.cardDetails.number.length<16))return{success:!1,error:"信用卡號碼無效"};const e={id:`payment-${Date.now()}`,booking_id:t.bookingId,amount:t.amount,method:t.method,status:"completed",transaction_id:`txn-${Math.random().toString(36).substr(2,9)}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return j.push(e),{success:!0,data:e,message:"支付成功"}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},_=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入支付記錄");const e=p.filter(l=>l.user_id===t).map(l=>l.id);return{success:!0,data:j.filter(l=>e.includes(l.booking_id))}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},U=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("提交評價失敗");const e={...t,id:`review-${Date.now()}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return q.push(e),{success:!0,data:e,message:"評價提交成功"}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},D=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入評價");return{success:!0,data:q.filter(o=>o.caregiver_id===t)}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}},u=async t=>{s.value=!0,n.value=null;try{if(await i(),c())throw new Error("無法載入統計資料");const e=p.filter(g=>g.user_id===t),l=j.filter(g=>e.some(m=>m.id===g.booking_id)).reduce((g,m)=>g+m.amount,0),d=new Date,O=e.filter(g=>new Date(g.start_date)>=d&&["confirmed","pending"].includes(g.status)),P=e.sort((g,m)=>new Date(m.created_at).getTime()-new Date(g.created_at).getTime()).slice(0,5),E=e.reduce((g,m)=>(g[m.caregiver_id]=(g[m.caregiver_id]||0)+1,g),{}),x=Object.keys(E).length>0?S.find(g=>g.id===parseInt(Object.keys(E).reduce((m,M)=>E[parseInt(m)]>E[parseInt(M)]?m:M))):void 0;return{success:!0,data:{totalBookings:e.length,completedBookings:e.filter(g=>g.status==="completed").length,pendingBookings:e.filter(g=>g.status==="pending").length,totalSpent:l,favoriteCaregiver:x,recentBookings:P,upcomingBookings:O}}}catch(e){return n.value=e.message,{success:!1,error:e.message}}finally{s.value=!1}};return{isLoading:L(s),error:L(n),loginUser:y,registerUser:C,updateUserProfile:h,getCaregivers:k,searchCaregivers:r,getCaregiverById:v,filterCaregivers:b,createBooking:w,getBookingsByUser:A,updateBookingStatus:R,processPayment:T,getPaymentHistory:_,createReview:U,getReviewsByCaregiver:D,getDashboardStats:u,clearError:()=>{n.value=null}}},ce=s=>{const n=ae(),i=ne(),{routes:c}=G(),{config:y,isUsingMockApi:C}=te(),h=I(s?{...y.value,...s}:y.value),k=N(()=>s?h.value.useMockApi:C.value),r=async(a,f,re=!0)=>{if(k.value){const B=await a();if(B.success)return B.data;throw new Error(B.error||"Mock API 錯誤")}try{return await f()}catch(B){if(re){console.warn("Real API failed, falling back to mock API:",B);const H=await a();if(H.success)return H.data;throw new Error(H.error||"Mock API 錯誤")}throw B}},v=async(a,f)=>r(()=>i.loginUser(a,f),()=>n.post(c.auth.login,{email:a,password:f})),b=async a=>r(()=>i.registerUser(a),()=>n.post(c.auth.register,a)),w=async()=>r(()=>Promise.resolve({success:!0,data:null}),()=>n.post(c.auth.logout)),A=async a=>r(()=>Promise.resolve({success:!0,data:null}),()=>n.get(c.users.byId(a))),R=async(a,f)=>r(()=>i.updateUserProfile(a,f),()=>n.put(c.users.updateProfile,f)),T=async(a=1,f=10)=>r(()=>i.getCaregivers(a,f),()=>n.get(c.caregivers.list,{page:a,limit:f})),_=async a=>r(()=>i.searchCaregivers(a),()=>n.get(c.caregivers.search,{q:a})),U=async a=>r(()=>i.getCaregiverById(a),()=>n.get(c.caregivers.byId(a))),D=async a=>r(()=>i.filterCaregivers(a),()=>n.post(c.caregivers.filter,a)),u=async()=>r(()=>i.getCaregivers(1,6),()=>n.get(c.caregivers.featured)),t=async()=>r(()=>i.getCaregivers(1,5),()=>n.get(c.caregivers.topRated)),e=async a=>r(()=>i.createBooking(a),()=>n.post(c.bookings.create,a)),o=async a=>r(()=>i.getBookingsByUser(a),()=>n.get(c.bookings.userBookings(a))),l=async a=>r(()=>Promise.resolve({success:!0,data:null}),()=>n.get(c.bookings.byId(a))),d=async(a,f)=>r(()=>i.updateBookingStatus(a,f),()=>n.patch(c.bookings.byId(a),{status:f})),O=async a=>r(()=>i.updateBookingStatus(a,"cancelled"),()=>n.post(c.bookings.cancel(a))),P=async a=>r(()=>i.updateBookingStatus(a,"confirmed"),()=>n.post(c.bookings.confirm(a))),E=async a=>r(()=>i.processPayment(a),()=>n.post(c.payments.process,a)),x=async a=>r(()=>i.getPaymentHistory(a),()=>n.get(c.payments.history,{userId:a})),g=async a=>r(()=>Promise.resolve({success:!0,data:null}),()=>n.get(c.payments.byId(a))),m=async a=>r(()=>i.createReview(a),()=>n.post(c.reviews.create,a)),M=async a=>r(()=>i.getReviewsByCaregiver(a),()=>n.get(c.reviews.byCaregiver(a))),F=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.get(c.reviews.byUser(a))),J=async a=>r(()=>i.getDashboardStats(a),()=>n.get(c.dashboard.stats,{userId:a})),Q=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.get(c.dashboard.recentActivity,{userId:a})),K=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.get(c.notifications.list,{userId:a})),W=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.get(c.search.suggestions,{q:a})),Z=async()=>r(()=>Promise.resolve({success:!0,data:["專業照護","失智症","復健","夜間照護"]}),()=>n.get(c.search.popular)),z=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.post(c.matching.findMatches,a)),V=async a=>r(()=>Promise.resolve({success:!0,data:[]}),()=>n.get(c.matching.getRecommendations,{userId:a})),X=async a=>r(()=>Promise.resolve({success:!0,data:{id:`contact-${Date.now()}`,...a,created_at:new Date().toISOString()},message:"您的訊息已成功送出，我們會盡快回覆您"}),()=>n.post("/api/contact",a)),Y=()=>{h.value.useMockApi=!0},ee=()=>{h.value.useMockApi=!1},se=a=>{h.value={...h.value,...a}};return{isLoading:N(()=>n.isLoading.value||i.isLoading.value),error:N(()=>n.error.value||i.error.value),isUsingMockApi:k,login:v,register:b,logout:w,getUserProfile:A,updateUserProfile:R,getCaregivers:T,searchCaregivers:_,getCaregiverById:U,filterCaregivers:D,getFeaturedCaregivers:u,getTopRatedCaregivers:t,createBooking:e,getBookingsByUser:o,getBookingById:l,updateBookingStatus:d,cancelBooking:O,confirmBooking:P,processPayment:E,getPaymentHistory:x,getPaymentById:g,createReview:m,getReviewsByCaregiver:M,getReviewsByUser:F,getDashboardStats:J,getRecentActivity:Q,getNotifications:K,getSearchSuggestions:W,getPopularSearchTerms:Z,findMatches:z,getRecommendations:V,submitContactForm:X,switchToMockApi:Y,switchToRealApi:ee,updateConfig:se,clearError:()=>{n.clearError(),i.clearError()}}};export{ce as u};

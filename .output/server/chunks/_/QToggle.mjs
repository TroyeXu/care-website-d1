import{a6 as e,ad as a,u as l,b as n,ae as o,a8 as t,h as u,d as r,r as s,c as i,_ as c}from"../build/server.mjs";import{e as d,az as v,aC as f,n as g,bg as m}from"../nitro/nitro.mjs";function useRefocusTarget(e,a){const l=d(null);return{refocusTargetEl:v((()=>!0===e.disable?null:f("span",{ref:l,class:"no-outline",tabindex:-1}))),refocusTarget:function(e){const n=a.value;!0!==e?.qAvoidFocus&&(0===e?.type.indexOf("key")?document.activeElement!==n&&!0===n?.contains(document.activeElement)&&n.focus():null===l.value||void 0!==e&&!0!==n?.contains(e.target)||l.value.focus())}}}const b={xs:30,sm:35,md:40,lg:50,xl:60},p={...l,...a,...e,modelValue:{required:!0,default:null},val:{},trueValue:{default:!0},falseValue:{default:!1},indeterminateValue:{default:null},checkedIcon:String,uncheckedIcon:String,indeterminateIcon:String,toggleOrder:{type:String,validator:e=>"tf"===e||"ft"===e},toggleIndeterminate:Boolean,label:String,leftLabel:Boolean,color:String,keepColor:Boolean,dense:Boolean,disable:Boolean,tabindex:[String,Number]},k=["update:modelValue"];function useCheckbox(e,a){const{props:l,slots:i,emit:c,proxy:p}=g(),{$q:k}=p,h=n(l,k),y=d(null),{refocusTargetEl:V,refocusTarget:x}=useRefocusTarget(l,y),C=o(l,b),q=v((()=>void 0!==l.val&&Array.isArray(l.modelValue))),_=v((()=>{const e=m(l.val);return!0===q.value?l.modelValue.findIndex((a=>m(a)===e)):-1})),$=v((()=>!0===q.value?-1!==_.value:m(l.modelValue)===m(l.trueValue))),I=v((()=>!0===q.value?-1===_.value:m(l.modelValue)===m(l.falseValue))),S=v((()=>!1===$.value&&!1===I.value)),T=v((()=>!0===l.disable?-1:l.tabindex||0)),w=v((()=>`q-${e} cursor-pointer no-outline row inline no-wrap items-center`+(!0===l.disable?" disabled":"")+(!0===h.value?` q-${e}--dark`:"")+(!0===l.dense?` q-${e}--dense`:"")+(!0===l.leftLabel?" reverse":""))),O=v((()=>{const a=!0===$.value?"truthy":!0===I.value?"falsy":"indet",n=void 0===l.color||!0!==l.keepColor&&("toggle"===e?!0!==$.value:!0===I.value)?"":` text-${l.color}`;return`q-${e}__inner relative-position non-selectable q-${e}__inner--${a}${n}`})),K=v((()=>{const e={type:"checkbox"};return void 0!==l.name&&Object.assign(e,{".checked":$.value,"^checked":!0===$.value?"checked":void 0,name:l.name,value:!0===q.value?l.val:l.trueValue}),e})),B=t(K),j=v((()=>{const a={tabindex:T.value,role:"toggle"===e?"switch":"checkbox","aria-label":l.label,"aria-checked":!0===S.value?"mixed":!0===$.value?"true":"false"};return!0===l.disable&&(a["aria-disabled"]="true"),a}));function onClick(e){void 0!==e&&(s(e),x(e)),!0!==l.disable&&c("update:modelValue",function(){if(!0===q.value){if(!0===$.value){const e=l.modelValue.slice();return e.splice(_.value,1),e}return l.modelValue.concat([l.val])}if(!0===$.value){if("ft"!==l.toggleOrder||!1===l.toggleIndeterminate)return l.falseValue}else{if(!0!==I.value)return"ft"!==l.toggleOrder?l.trueValue:l.falseValue;if("ft"===l.toggleOrder||!1===l.toggleIndeterminate)return l.trueValue}return l.indeterminateValue}(),e)}function onKeydown(e){13!==e.keyCode&&32!==e.keyCode||s(e)}function onKeyup(e){13!==e.keyCode&&32!==e.keyCode||onClick(e)}const E=a($,S);return Object.assign(p,{toggle:onClick}),()=>{const a=E();!0!==l.disable&&B(a,"unshift",` q-${e}__native absolute q-ma-none q-pa-none`);const n=[f("div",{class:O.value,style:C.value,"aria-hidden":"true"},a)];null!==V.value&&n.push(V.value);const o=void 0!==l.label?u(i.default,[l.label]):r(i.default);return void 0!==o&&n.push(f("div",{class:`q-${e}__label q-anchor--skip`},o)),f("div",{ref:y,class:w.value,...j.value,onClick:onClick,onKeydown:onKeydown,onKeyup:onKeyup},n)}}const h=i({name:"QToggle",props:{...p,icon:String,iconColor:String},emits:k,setup:e=>useCheckbox("toggle",(function(a,l){const n=v((()=>(!0===a.value?e.checkedIcon:!0===l.value?e.indeterminateIcon:e.uncheckedIcon)||e.icon)),o=v((()=>!0===a.value?e.iconColor:null));return()=>[f("div",{class:"q-toggle__track"}),f("div",{class:"q-toggle__thumb absolute flex flex-center no-wrap"},void 0!==n.value?[f(c,{name:n.value,color:o.value})]:void 0)]}))});export{h as _,k as a,p as b,useCheckbox as c,b as o,useRefocusTarget as u};
//# sourceMappingURL=QToggle.mjs.map
